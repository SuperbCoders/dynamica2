/ Current status of your primary data
.graph-unit-holder
  .graph-unit
    .graph-unit-large
      %h5.graph-name= t('projects.dashboard.current_status_of_data')
      .graph-filters.graph-filter-v1
        .btn-group{:role => "group"}
          %input#graph_filter_1{:checked => "", :hidden => "", :name => "graph_filter", :type => "radio", 'ng-model' => "vm.range.period", value: 'day'}
          %label.btn.btn-default.first{:for => "graph_filter_1", :type => "button"}= t('projects.dashboard.period.day')
          %input#graph_filter_2{:hidden => "", :name => "graph_filter", :type => "radio", 'ng-model' => "vm.range.period", value: 'week'}
          %label.btn.btn-default{:for => "graph_filter_2", :type => "button"}= t('projects.dashboard.period.week')
          %input#graph_filter_3{:hidden => "", :name => "graph_filter", :type => "radio", 'ng-model' => "vm.range.period", value: 'month'}
          %label.btn.btn-default.last{:for => "graph_filter_3", :type => "button"}= t('projects.dashboard.period.month')
      .graph-block
        .graph_3.areaChartFamily_1.d3graph.hide_x_axis
          #tooltip.graph-tooltip-holder.hidden_
            #tooltip_dot.tooltip-dot
            #tooltip_content.graph-tooltip

    %ul.legend_v2.graph-unit-legend
      / Revenue
      %li.legend_item{"data-graph" => "#family_area_0"}
        .legend_name{:style => "color: rgb(106, 255, 203);"}
          %span= t('projects.dashboard.legend.revenue')
        .legend_val
          %span.val {{vm.big_chart[0]['value'] | dynCurrency}}
          %sup.graph-dynamica{'ng-class' => "{dynamica_up: vm.parse_diff(vm.big_chart[0]['diff']) > 0, dynamica_down: vm.parse_diff(vm.big_chart[0]['diff']) < 0}"} {{vm.big_chart[0]['diff']}}

      / Orders
      %li.legend_item{"data-graph" => "#family_area_1"}
        .legend_name{:style => "color: rgb(255, 31, 167);"}
          %span= t('projects.dashboard.legend.orders')
        .legend_val
          %span.val {{vm.big_chart[1]['value'] | dynCurrency}}
          %sup.graph-dynamica{'ng-class' => "{dynamica_up: vm.parse_diff(vm.big_chart[1]['diff']) > 0, dynamica_down: vm.parse_diff(vm.big_chart[1]['diff']) < 0}"} {{vm.big_chart[1]['diff']}}

      / Products sell
      %li.legend_item{"data-graph" => "#family_area_2"}
        .legend_name{:style => "color: rgb(255, 112, 69);"}
          %span= t('projects.dashboard.legend.products_sell')
        .legend_val
          %span.val {{vm.big_chart[2]['value'] | dynCurrency}}
          %sup.graph-dynamica{'ng-class' => "{dynamica_up: vm.parse_diff(vm.big_chart[2]['diff']) > 0, dynamica_down: vm.parse_diff(vm.big_chart[2]['diff']) < 0}"} {{vm.big_chart[2]['diff']}}

      / Unique users
      %li.legend_item{"data-graph" => "#family_area_3"}
        .legend_name{:style => "color: rgb(59, 215, 255);"}
          %span= t('projects.dashboard.legend.unic users')
        .legend_val
          %span.val {{vm.big_chart[3]['value'] | dynCurrency}}
          %sup.graph-dynamica{'ng-class' => "{dynamica_up: vm.parse_diff(vm.big_chart[3]['diff']) > 0, dynamica_down: vm.parse_diff(vm.big_chart[3]['diff']) < 0}"} {{vm.big_chart[3]['diff']}}

      / Customers
      %li.legend_item{"data-graph" => "#family_area_4"}
        .legend_name{:style => "color: rgb(255, 216, 101);"}
          %span= t('projects.dashboard.legend.customers')
        .legend_val
          %span.val {{vm.big_chart[4]['value'] | dynCurrency}}
          %sup.graph-dynamica{'ng-class' => "{dynamica_up: vm.parse_diff(vm.big_chart[4]['diff']) > 0, dynamica_down: vm.parse_diff(vm.big_chart[4]['diff']) < 0}"} {{vm.big_chart[4]['diff']}}
